#include <bits/stdc++.h>
using namespace std;

// #define int long long

#define mod 1000000007

long long int power(long long int a, long long int b, long long int m)
{
    a %= m;
    long long int res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = res * a % m;
        a = a * a % m;
        b >>= 1;
    }
    return res;
}

// a^b^c..   b^c=q*(p-1)+r writing in euclid algo..

// a^(q*(p-1)+r)=a^r* (a^p-1)^q
// a^p-1 is 1 under modm
// so its a^r at end..

void solve()
{
    long long int a, b, c, ans, rem;
    cin >> a >> b >> c;
    ans = 0;
    rem = 0;

    rem = power(b, c, mod - 1);

    ans = power(a, rem, mod);
    cout << ans << endl;
}

int main()
{

    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}
